--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _eXb6MPp7EeW7_PzjO98BIw,_BRZyQPy3EeW7_PzjO98BIw,_2JCD4B3CEeehL98jfxP8Sw,_6kElkDBsEemdFPzzB7f3Tg
Element-Name: AutoDiscoverForSpecialPaths
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _fiIkUBulEeezQPN39rc8sA
Runtime-Version: 2.5.0.202001211718
Save-Time: 4/21/20 6:04 PM
Tags: Quick
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//==================================================  file from outside WS (full os specific path) ==========================================================================
//staus: ok, ok, fail
get-view "Project Explorer" | get-tree | select "RobotProject/tests/windows_path.robot" | double-click
get-editor "windows_path.robot" | get-text-viewer | set-caret-pos 2 11

let [val home_path [replace $user_folder -old "\\" -new "\\\\"]]{
	//set full path
	if [get-by-os -linux "Linux" -win "Windows"| equals "Windows"]{
		get-editor "windows_path.robot" | get-text-viewer |type-text [concat $home_path "\\\\ext_lib\\\\external_lib.py" ]
		
	}-else{
		get-editor "windows_path.robot" | get-text-viewer |type-text [concat $home_path "/ext_lib/external_lib.py" ]
	}
	get-view Problems | get-tree | get-item "Errors (18 items)" | expand-all
	wait 2000
	//check error about full windows path for: c:\folder\file.py
	try -times 5 -delay 1000 -command{
		with [get-view Problems | get-tree] {
		    get-property "getLinesVisible()" | equals true | verify-true
		    get-property "getMenu().isEnabled()" | equals true | verify-true
		}
	}	 
	with [get-view Problems | get-tree] {
	    get-item "Errors \\(18 items\\)/Windows paths are not supported. Use global variable '${\\/}' or Linux-like '\\/' path separators. Try to use Quick Fix \\(Ctrl\\+1\\)" 
	        | get-property "columns[1]" | equals "windows_path.robot" | verify-true
	    get-item "Errors \\(18 items\\)/Windows paths are not supported. Use global variable '${\\/}' or Linux-like '\\/' path separators. Try to use Quick Fix \\(Ctrl\\+1\\)" 
	        | get-property "columns[3]" | equals "line 3" | verify-true
	}
	//check if is warnings about lib outside ws
	with [get-view Problems | get-tree] {
	    get-item -path "Warnings \\(2 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Path '.*external_lib.py' is absolute. It is preferred to use relative paths" 
	        | verify-true
	    get-item -path "Warnings \\(2 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Path '.*external_lib.py' points to location outside your workspace" 
	        | verify-true

	}

	get-editor "windows_path.robot" | get-text-viewer | key-type "M1+s"
	wait-for-discover-window
	
	//check icons
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-property itemCount | equals 3 | verify-true
	    get-item add | get-property "image.path" 
	        | equals ".*/success_big.png" | verify-true
	    get-item "external_lib" | get-property "image.path" 
	        | equals ".*/success_big.png" | verify-true
	    get-item "c:\\folder\\file.py" | get-property "image.path" 
	        | equals ".*/error_fatal.png" | verify-true
	}
	//check fields for add.py (success)
	get-window "Discovering libraries summary" | get-tree | select "add/Status: Added to project configuration"
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "add/Status: Added to project configuration" | get-property index | equals 0 | verify-true
	    
	    get-item "add/Source:.*" | get-property caption 
	      | equals [format "Source: %s%sRobotProject%slibs%sadd.py" $RED_workspace_path $sys_sep $sys_sep $sys_sep $sys_sep]| verify-true
	    
	    get-item "add/Importer: .*" | get-property caption 
	    	 | equals [format "Importer: %s%sRobotProject%stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep] | verify-true
	}
	//check fields for extarnal lib outside workspace
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "external_lib/Status: Added to project configuration" | get-property index | equals 0 | verify-true

		get-item "external_lib/Source: .*" | get-property caption 
		| equals [format "Source: %s%sext_lib%sexternal_lib.py" $user_folder $sys_sep $sys_sep] | verify-true
				    	
	    get-item "external_lib/Importer: .*" | get-property caption | equals [format "Importer: %s%sRobotProject%Stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	         | verify-true
	}
	//check windows path
	with [get-window "Discovering libraries summary" | get-tree] {
	    get-item "c:\\folder\\file.py/Status: Not added to project configuration" | get-property index | equals 0 | verify-true
	    get-item -path "c:\\folder\\file.py/Source: Unknown" | get-property index | equals 1 | verify-true
	    get-item "c:\\folder\\file.py/Importer:.*" | get-property caption | equals [format "Importer: %s%sRobotProject%stests%swindows_path.robot" $RED_workspace_path $sys_sep $sys_sep $sys_sep]
	        | verify-true
	    get-item  -path "c:\\folder\\file.py/Additional info: The path 'c:\\folder\\file.py' contains not supported Windows separator." 
	        | get-property caption 
	        | equals "Additional info: The path 'c:\\folder\\file.py' contains not supported Windows separator." 
	        | verify-true
	}
	get-window "Discovering libraries summary" | get-tree | get-item 
	    -path "c:\\folder\\file.py/Additional info: The path 'c:\\folder\\file.py' contains not supported Windows separator." 
	    | click
	get-window "Discovering libraries summary" | get-editbox -after [get-label "Discovered libraries (3):"] 
	    | get-property text 
	    | equals "Additional info: The path 'c:\\folder\\file.py' contains not supported Windows separator." | verify-true
	get-window "Discovering libraries summary" | get-button OK | click
	
}


//======================================= suite has relative paths and one lib contain argument ===========================================================================
//status: warn, then ok

//add lib to red.xm from PE

get-view "Project Explorer" | get-tree | select "RobotProject/multiply.py" 
    | get-menu "Robot Framework/Add Library to red.xml" | click
    

get-view "Project Explorer" | get-tree | select "RobotProject/tests/test_with_relative_paths.robot" 
    | select "RobotProject/tests/test_with_relative_paths.robot" | double-click

//edit and save    
with [get-editor "test_with_relative_paths.robot" | get-text-viewer] {
    set-caret-pos 2 10
    type-text "."
    set-caret-pos 3 10
    type-text "."
    set-caret-pos 4 10
    type-text "."
    key-type "M1+s"
}

wait-for-discover-window

//check icons for status: ok, warning, warning
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "lib_with_args" | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item add | get-property "image.path" 
        | equals ".*/warning_big.png" | verify-true
    get-item multiply | get-property "image.path" 
        | equals ".*/warning_big.png" | verify-true
}

//check status of libs with warning 
with [get-window "Discovering libraries summary" | get-tree] {
    get-item "add/Status: Already existing in project configuration" | get-property index | equals 0 | verify-true
    get-item "multiply/Status: Already existing in project configuration" | get-property index | equals 0 | verify-true
}
get-window "Discovering libraries summary" | get-button OK | click

//remove all libs from red.xml and add discover again
remove-all-libraries-from-xml
get-button "Save \((Ctrl|M1)\+S\)" | click
wait 2000

get-tab-folder -index 1 | get-tab-item "test_with_relative_paths.robot" | click
with [get-editor "test_with_relative_paths.robot" | get-text-viewer] {
    set-caret-pos 11 5
    type-text " "
    wait 1000
    key-type "M1+s"
}
wait-for-discover-window

//now all are success
with [get-window "Discovering libraries summary" | get-tree] {
    get-item add | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item "lib_with_args" | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
    get-item multiply | get-property "image.path" 
        | equals ".*/success_big.png" | verify-true
}

//check if file were added to red.xml
get-window "Discovering libraries summary" | get-button OK | click
get-tab-folder -index 1 | get-tab-item "*RobotProject/red.xml" | click
with [get-editor "RobotProject/red.xml" | get-section Libraries | get-tree] {
    get-property "getItems().length" | equals 5 | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "add - RobotProject/libs/add.py" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "lib_with_args - RobotProject/libs/lib_with_args.py" 
        | verify-true
    get-property "getItems().TableItem[3].getText()" | equals "multiply - RobotProject/multiply.py" | verify-true
    get-property "getItems().TableItem[4].getText()" | equals "...add new library file" | verify-true
}
get-button "Save \((Ctrl|M1)\+S\)" | click

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
