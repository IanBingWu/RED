--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _yAtPsDQsEeiLWMPOs-qbiA
Element-Name: RFLintWithArguments
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _gr19ADQpEeiLWMPOs-qbiA
Runtime-Version: 2.5.0.202001211718
Save-Time: 6/24/20 4:12 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//
//
//  For this test install:
//  pip install --upgrade robotframework-lint
//

global [val link [format "Configure rules and their severity. Following rules are available for RfLint installed in "
    + "<a href=\"org.robotframework.ide.eclipse.main.plugin.preferences.installed\">%s</a> environment:" [replace -input $python_exe_path -old "\\" -new  "\\\\\\\\"]]]
 
 
//open preference and add arg file with full path
get-preferences-menu | click
get-window Preferences | get-tree | select "Robot Framework/Errors\\/Warnings/RfLint validation"
get-window Preferences | maximize
with [get-window Preferences] {
    get-editbox -after [get-label "Additional arguments for RfLint"] | set-text [format "-A %s/project_a/arg_file.arg" $RED_workspace_path_unix_style]
    get-button "Apply and Close" | click
}

//run analize
get-view "Project Explorer" | get-tree | select "project_a/test3.robot"
exec-with-options {
    get-view "Project Explorer" | get-tree | get-menu -path "Robot Framework/Run RfLint analysis" | click
} -allowStatusDialog

//check that 3 warnings ar shown
get-view Problems | get-tree | get-item -path "Errors \\(1 item\\)/Unrecognized table header: 'abc'" 
    | get-property index | equals 0 | verify-true
    
get-view Problems | click
with [get-view Problems | get-tree] {
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().length" | equals 5 | verify-true
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Line has trailing whitespace (TrailingWhitespace)" | verify-true
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().TreeItem[1].getText()" 
        | equals "Line has trailing whitespace (TrailingWhitespace)" | verify-true
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().TreeItem[2].getText()" 
        | equals "Line is too long (exceeds 30 characters) (LineTooLong)" | verify-true
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().TreeItem[3].getText()" 
        | equals "No suite documentation (RequireSuiteDocumentation)" | verify-true
    get-item -path "Warnings \\(5 items\\)" | get-property "getItems().TreeItem[4].getText()" 
        | equals "Too many trailing blank lines (TrailingBlankLines)" | verify-true
}

//change rule in table - now TrailingBlankLines is error
get-preferences-menu | click
with [get-window Preferences] {
    with [get-tree 
        -after [get-link $link]] {
        get-item -path [format ".*site-packages\\%srflint\\%srules\\%sotherRules.py \\(built-in\\)" $sys_sep $sys_sep $sys_sep] | expand
        get-cell 4 1 | click
        get-item -path [format ".*site-packages\\%srflint\\%srules\\%sotherRules.py \\(built-in\\)" $sys_sep $sys_sep $sys_sep]  | expand
        get-cell 4 1 | mouse down -count 2
        double-click
        select [format ".*site-packages\\%srflint\\%srules\\%sotherRules.py \\(built-in\\)/TrailingBlankLines" $sys_sep $sys_sep $sys_sep]
            | activate-cell-edit -column 1 -type MouseDoubleClickSelection
        get-cell 4 1 | mouse up -count 2
        get-combo | select Error
        apply-cell-edit -deactivate
    }
    get-button "Apply and Close" | click
}
//run analize and check if one warning was changed to error
get-view "Project Explorer" | get-tree | select "project_a/test3.robot" | get-menu 
	-path "Robot Framework/Run RfLint analysis" | click
    
wait-for-errors -amount 2 -times 3 -delay 1000    
with [get-view Problems | get-tree] {
    get-item -path "Errors \\(2 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Too many trailing blank lines (TrailingBlankLines)" | verify-true
    get-item -path "Errors \\(2 items\\)" | get-property "getItems().TreeItem[1].getText()" 
        | equals "Unrecognized table header: 'abc'" | verify-true
}

with [get-view Problems | get-tree] {
    get-item -path "Warnings \\(4 items\\)/Line is too long \\(exceeds 30 characters\\) \\(LineTooLong\\)" 
        | get-property selection | equals false | verify-true
    get-item -path "Warnings \\(4 items\\)/No suite documentation \\(RequireSuiteDocumentation\\)" 
        | get-property selected | equals false | verify-true
}
    
    
//add rule form pytohn file    
get-preferences-menu | click
set-dialog-result File "platform:/resource/project_a/customRules.py"
get-window Preferences |  get-tree  -after [get-link $link]
	| get-item "...add new rules file" | double-click
get-window Preferences | get-button "Apply and Close" | click

get-view "Project Explorer" | get-tree | select "project_a/test3.robot" | get-menu 
    -path "Robot Framework/Run RfLint analysis" | click
        
//set new file using workspace_path variable (other rules are removed)
get-preferences-menu | click
get-window Preferences | get-button "Restore Defaults" | click

with [get-window Preferences] {
    with [get-editbox -after [get-label "Additional arguments for RfLint"]] {
        set-text "-A ${workspace_loc}/project_a/arg_file2.arg"
    }
    get-button "Apply and Close" | click
}

//run rflint
get-view "Project Explorer" | get-tree | select "project_a/test3.robot"
exec-with-options {
    get-view "Project Explorer" | get-tree | get-menu -path "Robot Framework/Run RfLint analysis" | click
} -allowStatusDialog    
    
wait-for-errors -amount 3 -times 3 -delay 1000    
//check new errors     
with [get-view Problems | get-tree] {
    get-item -path "Errors \\(3 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Line is too long (exceeds 100 characters) (LineTooLong)" | verify-true
    get-item -path "Errors \\(3 items\\)" | get-property "getItems().TreeItem[1].getText()" 
        | equals "Unknown table name 'abc' (InvalidTable)" | verify-true
    get-item -path "Errors \\(3 items\\)" | get-property "getItems().TreeItem[2].getText()" 
        | equals "Unrecognized table header: 'abc'" | verify-true
}

wait-for-warnings -amount 6 -times 5 -delay 1000  
with [get-view Problems | get-tree] {
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        | equals "Line 5 should be empty (CustomRule)" | verify-true
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[1].getText()" 
        | equals "Line has trailing whitespace (TrailingWhitespace)" | verify-true
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[2].getText()" 
        | equals "Line has trailing whitespace (TrailingWhitespace)" | verify-true
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[3].getText()" 
        | equals "No suite documentation (RequireSuiteDocumentation)" | verify-true
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[4].getText()" 
        | equals "No suite documentation (RequireSuiteDocumentation)" | verify-true
    get-item -path "Warnings \\(6 items\\)" | get-property "getItems().TreeItem[5].getText()" 
        | equals "Too many trailing blank lines (TrailingBlankLines)" | verify-true
}
//set wrong path
get-preferences-menu | click
get-window Preferences | maximize
with [get-window Preferences] {
    get-editbox -after [get-label "Additional arguments for RfLint"] | set-text "-A ${workspace_loc}/project_a/arg_file23.arg"
    get-button "Apply and Close" | click
}
get-view "Project Explorer" | get-tree | select "project_a/test3.robot"
exec-with-options {
    get-view "Project Explorer" | get-tree | get-menu -path "Robot Framework/Run RfLint analysis" | click
    get-window "Problem Occurred" | get-button "Details >>" | click
    if [$python_version | eq 3]{
	    get-window "Problem Occurred" | get-editbox -after [get-label "See 'Details' for more information."] 
	        | get-property text | contains [format "No such file or directory: '%s/project_a/arg_file23.arg'" [os-specific $RED_workspace_path_double_slaches $RED_workspace_path]]
	        | verify-true
    }-else{
    	 get-window "Problem Occurred" | get-editbox -after [get-label "See 'Details' for more information."] 
        | get-property text | contains [format "No such file or directory: u'%s/project_a/arg_file23.arg'" [os-specific $RED_workspace_path_double_slaches $RED_workspace_path]]
        | verify-true
    }    
    get-window "Problem Occurred" | get-button OK | click
} -allowStatusDialog


//set param that not exist
get-preferences-menu | click
with [get-window Preferences] {
    with [get-editbox -after [get-label "Additional arguments for RfLint"]] {
        set-text "-A ${new_var}/project_a/arg_file2.arg"
    }
    get-button "Apply and Close" | click
}
get-view "Project Explorer" | get-tree | select "project_a/test3.robot"
exec-with-options {
    get-view "Project Explorer" | get-tree | get-menu -path "Robot Framework/Run RfLint analysis" | click
    get-window "Problem Occurred" | get-button "Details >>" | click
    if [$python_version | eq 3]{
	    get-window "Problem Occurred" | get-editbox -after [get-label "See 'Details' for more information."] 
	        | get-property text | contains "[Errno 2] No such file or directory: '${new_var}/project_a/arg_file2.arg'" 
	        | verify-true
   }-else{
   		get-window "Problem Occurred" | get-editbox -after [get-label "See 'Details' for more information."] 
	        | get-property text | contains "[Errno 2] No such file or directory: u'${new_var}/project_a/arg_file2.arg'" 
	        | verify-true
   }     
        
    get-window "Problem Occurred" | get-button OK | click
} -allowStatusDialog
    
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
