--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _nyIcUI6tEemtyOUvY7yb_Q
Element-Name: RFLintChangeCustomRules
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _-fkNYJGpEemOWdSh6VSwkQ
Runtime-Version: 2.5.0.202001211718
Save-Time: 4/20/20 6:10 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//
//
//  For this test install:
//  pip install --upgrade robotframework-lint
//

global [val link [format "Configure rules and their severity. Following rules are available for RfLint installed in "
    + "<a href=\"org.robotframework.ide.eclipse.main.plugin.preferences.installed\">%s</a> environment:" [replace -input $python_exe_path -old "\\" -new  "\\\\\\\\"]]]
    
get-preferences-menu | click
exec-with-options {
	get-window Preferences | get-tree | select "Robot Framework/Errors\\/Warnings/RfLint validation"
} -allowStatusDialog

// add 2 custom files
set-dialog-result File "platform:/resource/project_a/my_rules/customRules.py" "platform:/resource/project_a/my_rules/two_rules.py"
get-window Preferences |  get-tree  -after [get-link $link]	| get-item "...add new rules file" | double-click


//check if rules from files were added
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    //two_rules
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py"  $sys_sep $sys_sep]
        | get-property "values['Rule']" | equals [ format ".*project_a\\%smy_rules\\%stwo_rules.py"  $sys_sep $sys_sep]
        | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py"  $sys_sep $sys_sep]
        | get-property "values['Severity']" | equals 0 | verify-true
    //customRules    
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py" $sys_sep $sys_sep] 
        | get-property "values['Rule']" 
        | equals [ format ".*project_a\\%smy_rules\\%scustomRules.py"  $sys_sep $sys_sep] | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py"  $sys_sep $sys_sep]
        | get-property "values['Severity']" | equals 0 | verify-true
}

//check two_rules children
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsX" $sys_sep $sys_sep]
        | get-property "values['Rule']" | equals TestNamesContainsX | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsX" $sys_sep $sys_sep]
        | get-property "values['Severity']" | equals Warning | verify-true
   
    //  TestNamesContainsY  
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep]
        | get-property "values['Rule']" | equals TestNamesContainsY | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep]
        | get-property "values['Severity']" | equals Error | verify-true
}

//check file scustomRules.py
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep]
        | get-property "values['Rule']" | equals CustomRule | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep]
        | get-property "values['Severity']" | equals Warning | verify-true
}
// change CustomRule to error and add value
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py"$sys_sep $sys_sep] | expand
    get-cell 8 1 | click
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py"$sys_sep $sys_sep] | expand
    get-cell 8 1 | mouse down -count 2
    double-click
    select [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep]| activate-cell-edit 
        -column 1 -type MouseDoubleClickSelection
    get-cell 8 1 | mouse up -count 2
    get-combo | select Error
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py" $sys_sep $sys_sep]| expand
    get-cell 8 2 | mouse down -count 1
    apply-cell-edit -deactivate
}
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    select [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep]
    get-cell 8 2 | mouse up -count 1
}

//change value to 555
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py" $sys_sep $sys_sep] | expand
    get-cell 8 2 | mouse down -count 2
    double-click
    select [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep] | activate-cell-edit 
        -column 2 -type MouseDoubleClickSelection
    get-cell 8 2 | mouse up -count 2
    get-editbox | set-text 555
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py" $sys_sep $sys_sep] | expand
    get-cell 5 1 | mouse down -count 1
    apply-cell-edit -deactivate
}

// TestNamesContainsX change to error
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    select [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsX" $sys_sep $sys_sep]
    get-cell 5 1 | mouse up -count 1
}
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py" $sys_sep $sys_sep]| expand
    get-cell 5 1 | click
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py" $sys_sep $sys_sep]| expand
    get-cell 5 1 | mouse down -count 2
    double-click
    select [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsX" $sys_sep $sys_sep]
        | activate-cell-edit -column 1 -type MouseDoubleClickSelection
    get-cell 5 1 | mouse up -count 2
    get-combo | select Error
    
	// TestNamesContainsY change to ignore
    apply-cell-edit -deactivate
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep] | uncheck
}

//check taht font is bold
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    // TestNamesContainsY is not checked and greyed-out
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep] 
        | get-property checked | equals false | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep] 
        | get-property "styles[0].fontStyle" | equals normal | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsY" $sys_sep $sys_sep] 
        | get-property "styles[0].foregroundColor" | equals "#C8C8C8" | verify-true
        
    //other rule are checked    
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py/TestNamesContainsX" $sys_sep $sys_sep] 
        | get-property checked | equals true | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%scustomRules.py/CustomRule" $sys_sep $sys_sep] 
        | get-property checked | equals true | verify-true
}

//close rules and remove file
get-window Preferences | get-button "Apply and Close" | click
get-view "Project Explorer" | get-tree | select "project_a/my_rules/two_rules.py" | key-type Del
get-window "Delete Resources" | get-button OK | click

//check if now rules are unknown
get-preferences-menu | click
with [get-window Preferences | get-tree 
    -after [get-link $link ]]{
    get-item -path "Unknown source" | get-property "getItems().length" | equals 2 | verify-true
    get-item -path "Unknown source" | get-property "getItems().TreeItem[0].getText()" | equals TestNamesContainsX 
        | verify-true
    get-item -path "Unknown source" | get-property "getItems().TreeItem[1].getText()" | equals TestNamesContainsY 
        | verify-true
        
    //check severity    
    get-item -path "Unknown source/TestNamesContainsX" | get-property "values['Severity']" | equals Error | verify-true
    get-item -path "Unknown source/TestNamesContainsY" | get-property "values['Severity']" | equals "-1" | verify-true
    get-item -path [ format ".*project_a\\%smy_rules\\%stwo_rules.py" $sys_sep $sys_sep ]
        | get-property "styles[0].foregroundColor" | equals "#FF0000" | verify-true
}

//check text after clicking on file name that was removed
get-window Preferences | maximize
get-window Preferences | get-tree -after [get-link $link]| get-cell 7 0 | click

get-window Preferences | get-canvas | get-property text 
    | equals [format "The file '.*project_a\\%smy_rules\\%stwo_rules.py' does not exist\r\n" $sys_sep $sys_sep] 
    | verify-true
get-window Preferences | get-button "Apply and Close" | click

//rename rule
get-view "Project Explorer" | get-tree | select "project_a/my_rules/customRules.py" | key-type F2

if [$is_eclipse_12_2019 | equals True]{
	get-view "Project Explorer" | get-tree | get-editbox | set-text "abc.py"
	get-view "Project Explorer" | get-tree | key-type Enter
}-else{
	// old eclipse
	with [get-window "Rename Resource"] {
	    get-editbox -after [get-label "New name:"] | set-text "abc.py"
	    get-button OK | click
	}
} 

//check that now 3 rules are uknown
get-preferences-menu | click
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path "Unknown source" | get-property childCount | equals 3 | verify-true
    
    get-item -path "Unknown source/CustomRule" | get-property "values['Rule']" | equals CustomRule | verify-true
    get-item -path "Unknown source/CustomRule" | get-property "values['Severity']" | equals Error | verify-true
    
    get-item -path "Unknown source/TestNamesContainsX" | get-property "values['Rule']" | equals TestNamesContainsX 
        | verify-true
    get-item -path "Unknown source/TestNamesContainsX" | get-property "values['Severity']" | equals Error | verify-true
    
    get-item -path "Unknown source/TestNamesContainsY" | get-property "values['Rule']" | equals TestNamesContainsY 
        | verify-true
    get-item -path "Unknown source/TestNamesContainsY" | get-property "values['Severity']" | equals "-1" | verify-true
}

// click on two_rules file to see error
get-window Preferences | maximize
get-window Preferences | get-tree 
    -after [get-link $link] 
    | get-cell 8 0 | click
get-window Preferences | get-canvas | get-property text 
    | equals [format "The file '.*project_a\\%smy_rules\\%stwo_rules.py' does not exist\r\n" $sys_sep $sys_sep]
    | verify-true

//click on customRules
get-window Preferences | get-tree 
    -after [get-link $link] 
    | get-cell 9 0 | click
get-window Preferences | get-canvas | get-property text 
    | equals [format "The file '.*project_a\\%smy_rules\\%scustomRules.py' does not exist\r\n" $sys_sep $sys_sep]
    | verify-true
get-window Preferences | get-button "Apply and Close" | click

//rename to old name
get-view "Project Explorer" | get-tree | select "project_a/my_rules/abc.py" | key-type F2
if [$is_eclipse_12_2019 | equals True]{
	get-view "Project Explorer" | get-tree | get-editbox | set-text "customRules.py"
	get-view "Project Explorer" | get-tree | key-type Enter
}-else{
	// old eclipse
	with [get-window "Rename Resource"] {
	    get-editbox -after [get-label "New name:"] | set-text "customRules.py"
	    get-button OK | click
	}
} 

//open preference and check that custom rules are not red
get-preferences-menu | click
get-window Preferences | maximize
get-window Preferences | get-tree 
    -after [get-link $link] 
    | get-cell 6 0 | click


//2 rules are not recognized    
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-item -path "Unknown source" | get-property "getItems().TreeItem[0].getText()" | equals TestNamesContainsX 
        | verify-true
    get-item -path "Unknown source" | get-property "getItems().TreeItem[1].getText()" | equals TestNamesContainsY 
        | verify-true
}
//checlk that two_rules are still missing
get-window Preferences | get-tree 
    -after [get-link $link] 
    | get-cell 7 0 | click
get-window Preferences | get-canvas | get-property text 
    | equals [format "The file '.*project_a\\%smy_rules\\%stwo_rules.py' does not exist\r\n" $sys_sep $sys_sep]
    | verify-true
    
//restore to default and check if 2 files were removed    
get-window Preferences | get-button "Restore Defaults" | click
with [get-window Preferences | get-tree 
    -after [get-link $link]] {
    get-property itemCount | equals 5 | verify-true
    get-property "getItems().TreeItem[0].getText()" 
        | equals [format ".*rflint\\%srules\\%skeywordRules.py \\(built-in\\)"$sys_sep $sys_sep] | verify-true
    get-property "getItems().TreeItem[1].getText()" 
        | equals [format ".*rflint\\%srules\\%sotherRules.py \\(built-in\\)"$sys_sep $sys_sep] | verify-true
    get-property "getItems().TreeItem[2].getText()" 
        | equals [format ".*rflint\\%srules\\%ssuiteRules.py \\(built-in\\)"$sys_sep $sys_sep]  | verify-true
    get-property "getItems().TreeItem[3].getText()" 
        | equals [format ".*rflint\\%srules\\%stestcaseRules.py \\(built-in\\)"$sys_sep $sys_sep]  | verify-true
    get-property "getItems().TreeItem[4].getText()" | equals "...add new rules file" | verify-true
}
get-window Preferences | get-button "Apply and Close" | click


------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
