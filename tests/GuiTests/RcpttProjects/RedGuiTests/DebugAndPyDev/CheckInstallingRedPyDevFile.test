--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _FsQFUFFmEemaBdiDDGirUQ
Element-Name: CheckInstallingRedPyDevFile
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _CeYksFFyEemaBdiDDGirUQ
Runtime-Version: 2.4.3.201909171500
Save-Time: 2/5/20 2:49 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// remove red-pydevd from python
exec-process "python3" "-m" "pip" "uninstall" "-y" "red-pydevd" -ignoreStderr true -ignoreExitCode true |  get stderr | log

//select python
get-menu -path "File/New/Other..." | click
get-window New | get-tree | select "Robot Framework/RED with PyDev debugging session" | double-click
with [get-window "RED with PyDev debugging session"] {
    get-table | select [format "Robot Framework .* \\(Python %s.*\\)" $python_version]
    
    //go to pydev
    with [get-button "Next >"] {
        click
        click
    }
    get-group "Debugger module" | get-button "Workspace..." | click
    with [get-window "Select file:"] {
        get-tree | select "Wizard/pydevd.py"
        get-button OK | click
    }
    get-button Finish | click
}

//check that redpydevd modul is used
get-window "Debug Configurations" | get-tab-folder | get-tab-item Executor | click
get-window "Debug Configurations" | get-group "External script" | get-editbox 
    -after [get-label "Additional executable file arguments. Python interpreter's and Robot parameters will be added afterwards."] 
    | get-property text | equals [format "-m redpydevd --pydevd %s%sWizard%spydevd.py" $RED_workspace_path $sys_sep $sys_sep]| verify-true

get-window "Debug Configurations" | get-button Close | click    
    
//check that now modul is installed
exec-process "python3" "-m" "pip" "list" -ignoreStderr true | let [val result [ get stdout] ]{
  $result| contains "red-pydevd" | assert-true -message [format "red-pydevd not found in: \n %s" $result]
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
