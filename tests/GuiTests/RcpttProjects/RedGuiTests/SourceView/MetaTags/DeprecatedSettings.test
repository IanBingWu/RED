--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: DeprecatedSettings
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _oqiBUMD5EeWqU8ILayOzQw
Save-Time: 6/25/20 4:29 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//test for meta tags check in source

// this is tests for outdates meta
get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | double-click

get-editor "TestFile.robot" | get-text-viewer | set-text  "*** Settings ***\n"
    + "Meta:\tName2\tValue\n"
    + "Meta: Name  Value\n"
    + "| Meta: Name | Value |\n"
    + "Document    dokumentacja\n"
    + "Suite Precondition   No Operation\n\n"
    + "Suite Postcondition    No Operation\n"
    + "Test Precondition    No Operation\n"
    + "Test Postcondition    No Operation\n\n"
    + "Library    OperatingSystem    With Name    os\n"
    + "Library    OperatingSystem   WITH NAME     os2\n"
    + "Library    Collection s\n"
    + "    \n"
    + "Suite Setup    log something\n"
    + "Suite Teardown    Log\n"
    + "Test Timeout    52s   This is old\n"
    + "*** Test Cases ***\n"
    + "T1\n"
    + "    [Document]    doc\n"
    + "    [Precondition]    No Operation\n"
    + "    [Postcondition]    No Operation\n"
    + "    Log    ok\n"
    + "    \n"
    + "*** User Keyword ***\n"
    + "K1\n"
    + "    [Document]    doc\n"
    + "    [Postcondition]    No Operation\n"
    + "    No Operation    \n"
    + "\t\n"
    + "*** Metadata ***\n\n"
    + "*** User Keywords ***\n"
    + "log something\n"
    + "    log   5" 
    
    
with [get-editor "TestFile.robot" | get-text-viewer] {
    key-type "M1+s"
}
get-tab-folder -index 4 | get-tab-item Problems | click
wait 1000

if [$robot_version | matches "^Robot Framework 2\.9\.\d .*"] {
	with [get-view Problems | get-tree] {
	    get-item "Errors \\(15 items\\)" | get-property "getText()" | equals "Errors (15 items)" | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Keyword setting '[Document]' is deprecated from Robot Framework 3.0. Use Documentation syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Setting '[Postcondition]' is deprecated from Robot Framework 3.0. Use Teardown syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "Setting '[Postcondition]' is deprecated from Robot Framework 3.0. Use Teardown syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "Setting '[Precondition]' is deprecated from Robot Framework 3.0. Use Setup syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals "Setting 'Document' is deprecated from Robot Framework 3.0. Use Documentation syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals "Setting 'Meta:' is deprecated from Robot Framework 3.0. Use Metadata syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Setting 'Suite Postcondition' is deprecated from Robot Framework 3.0. Use Suite Teardown syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[7].getText()" 
	        | equals "Setting 'Suite Precondition' is deprecated from Robot Framework 3.0. Use Suite Setup syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[8].getText()" 
	        | equals "Setting 'Test Postcondition' is deprecated from Robot Framework 3.0. Use Test Teardown syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[9].getText()" 
	        | equals "Setting 'Test Precondition' is deprecated from Robot Framework 3.0. Use Test Setup syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[10].getText()" 
	        | equals "Setting 'With Name' not in upper case is deprecated from Robot Framework 3.0.\n"
	        + "Use WITH NAME instead." | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[11].getText()" 
	        | equals "Table header '*** Metadata ***' is deprecated from Robot Framework 3.0. Use *** Settings *** syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[12].getText()" 
	        | equals "Table header '*** User Keyword ***' is deprecated from Robot Framework 3.0. Use *** Keywords *** or *** Keyword *** syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[13].getText()" 
	        | equals "Table header '*** User Keywords ***' is deprecated from Robot Framework 3.0. Use *** Keywords *** or *** Keyword *** syntax instead of current." 
	        | verify-true
	    get-item "Errors \\(15 items\\)" | get-property "getItems().TreeItem[14].getText()" 
	        | equals "Test Case setting '[Document]' is deprecated from Robot Framework 3.0. Use Documentation syntax instead of current." 
	        | verify-true
	}
	with [get-view Problems | get-tree] {
	    get-item "Warnings \\(4 items\\)" | get-property "getText()" | equals "Warnings (4 items)" | verify-true
	    get-item "Warnings \\(4 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Setting 'Meta:' in the same column with Metadata Key is removed in Robot Framework 3.0" | verify-true
	    get-item "Warnings \\(4 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Setting 'Meta:' in the same column with Metadata Key is removed in Robot Framework 3.0" | verify-true
	    get-item "Warnings \\(4 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "Setting 'Suite Setup' is duplicated. Robot will try to use 'No Operation' keyword as suite setup" 
	        | verify-true
	    get-item "Warnings \\(4 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "Setting 'Suite Teardown' is duplicated. Robot will try to use 'No Operation' keyword as suite teardown" 
	        | verify-true
	}
}
if [$robot_version | matches "^Robot Framework 3\.0.*"] {

	get-view Problems | get-label "9 errors, 15 warnings, 0 others" | get-property caption 
    	| equals "9 errors, 15 warnings, 0 others" | verify-true
	    
	with [get-view Problems | get-tree] {
	     get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[0].getText()" 
        	| equals "Extra spaces in library name 'Collection s'. Remove spaces and use 'Collections' instead." 
        	| verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Keyword 'Log' expects from 1 to 6 arguments but 0 are provided" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "The setting 'Suite Postcondition' is duplicated. No Suite Teardown will be executed" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "The setting 'Suite Precondition' is duplicated. No Suite Setup will be executed" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals "The setting 'Suite Setup' is duplicated. No Suite Setup will be executed" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals "The setting 'Suite Teardown' is duplicated. No Suite Teardown will be executed" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[7].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    get-item -path "Errors \\(9 items\\)" | get-property "getItems().TreeItem[8].getText()" 
	        | equals "Unknown 'Meta:' setting" | verify-true

	}
	        
	with [get-view Problems | get-tree] {    
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Keyword setting name '[Document]' is deprecated. Use '[Documentation]' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Keyword setting name '[Postcondition]' is deprecated. Use '[Teardown]' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "Setting alias using 'With Name' not in upper case is deprecated" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "Setting name 'Document' is deprecated. Use 'Documentation' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals "Setting name 'Suite Postcondition' is deprecated. Use 'Suite Teardown' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals "Setting name 'Suite Precondition' is deprecated. Use 'Suite Setup' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Setting name 'Test Postcondition' is deprecated. Use 'Test Teardown' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[7].getText()" 
	        | equals "Setting name 'Test Precondition' is deprecated. Use 'Test Setup' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[8].getText()" 
	        | equals "Specifying custom timeout messages is deprecated" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[9].getText()" 
	        | equals "Table header '*** Metadata ***' is deprecated. Use '*** Settings ***' instead." | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[10].getText()" 
	        | equals "Table header '*** User Keyword ***' is deprecated. Use '*** Keywords ***' instead." | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[11].getText()" 
	        | equals "Table header '*** User Keywords ***' is deprecated. Use '*** Keywords ***' instead." | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[12].getText()" 
	        | equals "Test case setting name '[Document]' is deprecated. Use '[Documentation]' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[13].getText()" 
	        | equals "Test case setting name '[Postcondition]' is deprecated. Use '[Teardown]' instead" | verify-true
	    get-item -path "Warnings \\(15 items\\)" | get-property "getItems().TreeItem[14].getText()" 
	        | equals "Test case setting name '[Precondition]' is deprecated. Use '[Setup]' instead" | verify-true
	}
}


if [$robot_version | matches "^Robot Framework 3\.1.*"] {
	with [get-view Problems | get-tree] {
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Extra spaces in library name 'Collection s'. Remove spaces and use 'Collections' instead." 
	        | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Keyword 'Log' expects from 1 to 6 arguments but 0 are provided" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "Keyword 'OperatingSystem' expects 0 arguments but 2 are provided" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "Setting alias using 'With Name' not in upper case is removed from RF 3.1. This is now treated as an argument to library import." 
	        | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals "Unknown 'Document' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[7].getText()" 
	        | equals "Unknown 'Meta:' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[8].getText()" 
	        | equals "Unknown 'Suite Postcondition' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[9].getText()" 
	        | equals "Unknown 'Suite Precondition' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[10].getText()" 
	        | equals "Unknown 'Test Postcondition' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[11].getText()" 
	        | equals "Unknown 'Test Precondition' setting" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[12].getText()" 
	        | equals "Unknown keyword 'log something'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[13].getText()" 
	        | equals "Unknown test case's setting definition '[Document]'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[14].getText()" 
	        | equals "Unknown test case's setting definition '[Postcondition]'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[15].getText()" 
	        | equals "Unknown test case's setting definition '[Precondition]'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[16].getText()" 
	        | equals "Unrecognized table header: 'Metadata'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[17].getText()" 
	        | equals "Unrecognized table header: 'User Keyword'" | verify-true
	    get-item -path "Errors \\(19 items\\)" | get-property "getItems().TreeItem[18].getText()" 
	        | equals "Unrecognized table header: 'User Keywords'" | verify-true
	}
	get-view Problems | get-tree | select "Warnings (1 item)"
	get-view Problems | get-tree | get-item -path "Warnings \\(1 item\\)" | get-property "getItems().TreeItem[0].getText()" 
	    | equals "Specifying custom timeout messages is deprecated" | verify-true
	}	

if [$robot_version | matches "^Robot Framework 3\.2.*"] {
	with [get-view Problems | get-tree] {
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().length" | equals 20 | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[0].getText()" 
	        | equals "Extra spaces in library name 'Collection s'. Remove spaces and use 'Collections' instead." 
	        | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[1].getText()" 
	        | equals "Keyword 'Log' expects from 1 to 6 arguments but 0 are provided" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[2].getText()" 
	        | equals "Keyword 'OperatingSystem' expects 0 arguments but 2 are provided" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[3].getText()" 
	        | equals "Setting 'Test Timeout' accepts only 1 value but 2 are given. No timeout will be checked" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[4].getText()" 
	        | equals "Setting alias using 'With Name' not in upper case is removed from RF 3.1. This is now treated as an argument to library import." 
	        | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[5].getText()" 
	        | equals "Unknown 'Document' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[6].getText()" 
	        | equals "Unknown 'Meta:' setting" | verify-true    
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[7].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[8].getText()" 
	        | equals "Unknown 'Meta: Name' setting" | verify-true
	    
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[9].getText()" 
	        | equals "Unknown 'Suite Postcondition' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[10].getText()" 
	        | equals "Unknown 'Suite Precondition' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[11].getText()" 
	        | equals "Unknown 'Test Postcondition' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[12].getText()" 
	        | equals "Unknown 'Test Precondition' setting" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[13].getText()" 
	        | equals "Unknown keyword 'log something'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[14].getText()" 
	        | equals "Unknown test case's setting definition '[Document]'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[15].getText()" 
	        | equals "Unknown test case's setting definition '[Postcondition]'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[16].getText()" 
	        | equals "Unknown test case's setting definition '[Precondition]'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[17].getText()" 
	        | equals "Unrecognized table header: 'Metadata'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[18].getText()" 
	        | equals "Unrecognized table header: 'User Keyword'" | verify-true
	    get-item -path "Errors \\(20 items\\)" | get-property "getItems().TreeItem[19].getText()" 
	        | equals "Unrecognized table header: 'User Keywords'" | verify-true
	}
}	

//this is to check new verions of Robot and to check errors
if [$robot_version |or [ matches "^Robot Framework 2\.9\.\d .*" ] [ matches "^Robot Framework 3\.[012].*"]  | eq false]{

	get-view Problems | get-label "21 errors, 2 warnings, 0 others" | get-property caption 
    	| equals "21 errors, 2 warnings, 0 others" | verify-true
}

//------------------------------- adding quick fix ---------------------------------------------------------------------------

proc "open-qf-and-select-option" [val line] [val col] [val option]{
	with [get-editor "TestFile.robot" | get-text-viewer] {
	    set-caret-pos $line $col
	    key-type "M1+1"
	}
	get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select $option
	    | click -default
    
}
get-editor "TestFile.robot" | maximize

//Suite Precondition  
open-qf-and-select-option  6 10  "Change to 'Suite Setup'" 
wait 1000

//postcondition
open-qf-and-select-option  23 10   "Change to '\\[Teardown\\]'" 

wait 1000
//*** Metadata ***
open-qf-and-select-option  32 8 "Change to '\\*\\*\\* Settings \\*\\*\\*'" 

//*** User Keywords ***
open-qf-and-select-option  34 11 "Change to '\\*\\*\\* Keywords \\*\\*\\*'"

//Documemt
open-qf-and-select-option 5 5 "Change to 'Documentation'" 
wait 1000

//Test Timeout
if [$robot_version | matches "^Robot Framework 3\.1.*"] {
	open-qf-and-select-option 18 27  "Remove Test Timeout message"
}

if [$robot_version | matches "^Robot Framework 3\.2.*"] {
	open-qf-and-select-option 18 8  "Remove unexpected values"
}
//Collection s
open-qf-and-select-option 14 18 "Change to 'Collections'" 
    
get-editor "TestFile.robot" | get-text-viewer | get-property text | equals "*** Settings ***\n"
    + "Meta:\tName2\tValue\n"
    + "Meta: Name  Value\n"
    + "| Meta: Name | Value |\n"
    + "Documentation    dokumentacja\n"
    + "Suite Setup   No Operation\n\n"
    + "Suite Postcondition    No Operation\n"
    + "Test Precondition    No Operation\n"
    + "Test Postcondition    No Operation\n\n"
    + "Library    OperatingSystem    With Name    os\n"
    + "Library    OperatingSystem   WITH NAME     os2\n"
    + "Library    Collections\n"
    + "    \n"
    + "Suite Setup    log something\n"
    + "Suite Teardown    Log\n"
    + "Test Timeout    52s\n"
    + "*** Test Cases ***\n"
    + "T1\n"
    + "    [Document]    doc\n"
    + "    [Precondition]    No Operation\n"
    + "    [Teardown]    No Operation\n"
    + "    Log    ok\n"
    + "    \n"
    + "*** User Keyword ***\n"
    + "K1\n"
    + "    [Document]    doc\n"
    + "    [Postcondition]    No Operation\n"
    + "    No Operation    \n"
    + "\t\n"
    + "*** Settings ***\n\n"
    + "*** Keywords ***\n"
    + "log something\n"
    + "    log   5" | verify-true
    
get-editor "TestFile.robot" | restore

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
